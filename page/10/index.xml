<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>柚子茶室</title>
    <link>https://yoziming.github.io/</link>
    <description>Recent content on 柚子茶室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>yoziming</copyright>
    <lastBuildDate>Wed, 17 Nov 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://yoziming.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>日期時間</title>
        <link>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E6%97%A5%E6%9C%9F%E6%99%82%E9%96%93/</link>
        <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E6%97%A5%E6%9C%9F%E6%99%82%E9%96%93/</guid>
        <description>柚子茶室 https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E6%97%A5%E6%9C%9F%E6%99%82%E9%96%93/ -&lt;h1 id=&#34;日期時間&#34;&gt;日期時間&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func main() {
	//1.獲取當前本地時間
	now := time.Now()
	fmt.Printf(&amp;quot;now=%v,type=%T&amp;quot;, now, now) //返回的類型是struct
	//2.通過now獲取各種詳細
	fmt.Printf(&amp;quot;年=%v,type=%T\n&amp;quot;, now.Year(), now.Year())
	fmt.Printf(&amp;quot;月=%v,type=%T\n&amp;quot;, now.Month(), now.Month())
	fmt.Printf(&amp;quot;月=%v,type=%T\n&amp;quot;, int(now.Month()), int(now.Month()))
	fmt.Printf(&amp;quot;日=%v,type=%T\n&amp;quot;, now.Day(), now.Day())
	fmt.Printf(&amp;quot;時=%v,type=%T\n&amp;quot;, now.Hour(), now.Hour())
	fmt.Printf(&amp;quot;分=%v,type=%T\n&amp;quot;, now.Minute(), now.Minute())
	fmt.Printf(&amp;quot;秒=%v,type=%T\n&amp;quot;, now.Second(), now.Second())
	fmt.Printf(&amp;quot;星期=%v,type=%T\n&amp;quot;, now.Weekday(), now.Weekday())
	fmt.Printf(&amp;quot;星期=%v\n&amp;quot;, int(now.Weekday()))
	//3.格式化日期時間
	dateStr := fmt.Sprintf(&amp;quot;年月日時分=%d-%d-%d %d:%d\n&amp;quot;, now.Year(), now.Month(),
		now.Day(), now.Minute(), now.Second())
	fmt.Println(dateStr)
	//4.蛋疼的指定格式
	fmt.Println(now.Format(&amp;quot;2006-01-02 15:04:05&amp;quot;))
	fmt.Println(now.Format(&amp;quot;2006-01-02&amp;quot;))
	fmt.Println(now.Format(&amp;quot;06&amp;quot;))
	fmt.Println(now.Format(&amp;quot;01&amp;quot;))
	fmt.Println(now.Format(&amp;quot;03&amp;quot;))
	fmt.Println(now.Format(&amp;quot;01-02-06 03 04 05&amp;quot;))
	//123456=月日時分秒年
	//5.時間常量&amp;amp;休眠
	//每隔固定時間打印數字，打到100退出
	for i := 0; i &amp;lt;= 100; i++ {
		fmt.Println(i)
		time.Sleep(time.Millisecond)
	}
	//6.獲取時間戳unix unixNano
	fmt.Println(now.Unix())
	fmt.Println(now.UnixNano())

	//跑之前的時間
	start := now.Unix()
	test()
	end := now.Unix()
	fmt.Printf(&amp;quot;耗時%v&amp;quot;, end-start)
}

//7.統計函數執行時間
func test() {
	str := &amp;quot;&amp;quot;
	for i := 0; i &amp;lt; 100000; i++ {
		str = str + &amp;quot;hello&amp;quot; + strconv.Itoa(i)
	}
}

&lt;/code&gt;&lt;/pre&gt;- https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E6%97%A5%E6%9C%9F%E6%99%82%E9%96%93/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>結構體</title>
        <link>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B5%90%E6%A7%8B%E9%AB%94/</link>
        <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B5%90%E6%A7%8B%E9%AB%94/</guid>
        <description>柚子茶室 https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B5%90%E6%A7%8B%E9%AB%94/ -&lt;h1 id=&#34;結構體&#34;&gt;結構體&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Cat struct {
	Name  string
	Age   int
	Color string
	// S1    []int //可以是切片 但是預設值為nil(沒分配空間，一樣要先make後才能用)
}

//結構體是一個值類型，預設是值拷貝，比如cat1跟cat2是獨立存在兩個空間

func main() {
	//創建Cat的變量
	var cat1 Cat
	cat1.Name = &amp;quot;小花&amp;quot;
	cat1.Age = 18
	cat1.Color = &amp;quot;花&amp;quot;
	fmt.Println(&amp;quot;cat1=&amp;quot;, cat1)
	// cat1.S1 = make([]int, 10)
	// cat1.S1[0] = 100
	// fmt.Println(&amp;quot;cat1=&amp;quot;, cat1)

	//推薦方式
	cat2 := Cat{&amp;quot;小黑&amp;quot;, 5, &amp;quot;black&amp;quot;}
	fmt.Println(cat2)

	//方法3
	//var c *C=new(C)
	var cat3 *Cat = new(Cat)
	//因為cat3是一個指針
	(*cat3).Name = &amp;quot;小白&amp;quot;
	//語法糖 cat3.Age也可以 ，不建議
	cat3.Age = 6
	fmt.Println(*cat3)

	//方法4
	//var c *C=&amp;amp;C{}
	//因為c是一個指針 本來應該要用*...但是不用也行 草
	var cat4 *Cat = &amp;amp;Cat{&amp;quot;阿皇&amp;quot;, 0, &amp;quot;Yellow&amp;quot;}
	cat4.Name = &amp;quot;阿煌&amp;quot;
	(*cat4).Age = 1
	fmt.Println(*cat4)

	type Person struct {
		Name string `json:&amp;quot;name&amp;quot;`
		Age  int    `json:&amp;quot;age&amp;quot;`
	}

	p1 := Person{&amp;quot;aaa&amp;quot;, 10}
	fmt.Println(p1)
	var p2 *Person = &amp;amp;p1
	// fmt.Println(*p2.Age) //這樣寫會報錯。因為.的優先級比*高
	fmt.Println(p2.Age) //語法糖

	//用type重定義(類似於取別名)但是他會認為是2種類型
	type Per Person
	// var p3 Person = Person{&amp;quot;tommy&amp;quot;, 5}
	// var p4 Per
	// //p3=p4 //這樣會報錯
	// p4 = Per(p3) //這樣強轉
	// fmt.Println(p3, p4)
	fmt.Println(&amp;quot;--------------&amp;quot;)
	//struct的每個字段上可以寫一個tag，該tag可以通過反射機制獲取，常用於序列化
	pj := Per{&amp;quot;李四&amp;quot;, 44}
	jsonStr, err := json.Marshal(pj) //返回的是byte
	if err != nil {
		fmt.Println(&amp;quot;錯誤&amp;quot;)
	}
	fmt.Println(string(jsonStr)) //返回的是byte所以加一個string

}

&lt;/code&gt;&lt;/pre&gt;- https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B5%90%E6%A7%8B%E9%AB%94/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>繼承</title>
        <link>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B9%BC%E6%89%BF/</link>
        <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B9%BC%E6%89%BF/</guid>
        <description>柚子茶室 https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B9%BC%E6%89%BF/ -&lt;h1 id=&#34;繼承&#34;&gt;繼承&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Student struct {
	Name  string
	Age   int
	Score int
	//共有的字段
}

type Pupil struct {
	Student //套入
	Covid19 bool
}

type College struct {
	Student //套入指針效率更好
	SexExp  bool
}

func (stu *Student) ShowInfo() {
	fmt.Printf(&amp;quot;姓名=%v 年齡=%v 成績=%v\n&amp;quot;, stu.Name, stu.Age, stu.Score)
}

func (stu *Student) SetScore(s int) {
	stu.Score = s
}

func (p *Pupil) Test() {
	fmt.Println(&amp;quot;小學生考試&amp;quot;)
}

func main() {
	pupilA := &amp;amp;Pupil{}
	pupilA.Student.Name = &amp;quot;tome&amp;quot;
	pupilA.Student.Age = 8
	pupilA.Covid19 = true

	pupilA.Test()
	pupilA.Student.SetScore(66)
	pupilA.Student.ShowInfo()
	fmt.Println(&amp;quot;是否得肺炎&amp;quot;, pupilA.Covid19)

	C1 := College{}
	C1.Student.Name = &amp;quot;John&amp;quot;
	C1.Age = 23 //其實可以省略.Student
	C1.SexExp = false

	C1.Student.SetScore(39)
	C1.ShowInfo() //其實可以省略.Student
	fmt.Println(&amp;quot;是否破處&amp;quot;, C1.SexExp)

	//如果有低能把結構體跟匿名結構體用了相同的字段或方法，會採取就近訪問原則
	// 如果在一個結構中嵌入多個匿名結構，且匿名結構有同名的字段，那就必須指明匿名結構否則報錯

	//組合
	var d D
	d.a.Name = &amp;quot;xxxx&amp;quot; //有名字的結構體訪問時就要上完整名字
}

//組合
type D struct {
	a Student //有名字的結構體
}
&lt;/code&gt;&lt;/pre&gt;- https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E7%B9%BC%E6%89%BF/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>錯誤處理</title>
        <link>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/</link>
        <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/</guid>
        <description>柚子茶室 https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/ -&lt;h1 id=&#34;錯誤處理&#34;&gt;錯誤處理&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;test&lt;/span&gt;() {
	&lt;span style=&#34;color:#228b22&#34;&gt;//捕捉異常
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;func&lt;/span&gt;() {
		&lt;span style=&#34;color:#228b22&#34;&gt;//內置函數recover就是找是否異常
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; err := &lt;span style=&#34;color:#658b00&#34;&gt;recover&lt;/span&gt;(); err != &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;nil&lt;/span&gt; { &lt;span style=&#34;color:#228b22&#34;&gt;//err不為空=有錯
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			fmt.&lt;span style=&#34;color:#008b45&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;錯誤&amp;#34;&lt;/span&gt;, err)
		}
	}()
	n1 := &lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;
	n2 := &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;
	res := n1 / n2
	fmt.&lt;span style=&#34;color:#008b45&#34;&gt;Println&lt;/span&gt;(res)
}

&lt;span style=&#34;color:#228b22&#34;&gt;//讀取文件名稱，錯誤就報錯
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;readConf&lt;/span&gt;(name &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt;) (err &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;error&lt;/span&gt;) {
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; name == &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;config.ini&amp;#34;&lt;/span&gt; {
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;nil&lt;/span&gt;
	} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
		&lt;span style=&#34;color:#228b22&#34;&gt;//返回自訂錯誤
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; errors.&lt;span style=&#34;color:#008b45&#34;&gt;New&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;文件錯誤&amp;#34;&lt;/span&gt;)
	}
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;test02&lt;/span&gt;() {
	err := &lt;span style=&#34;color:#008b45&#34;&gt;readConf&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;config.in564&amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; err != &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#658b00&#34;&gt;panic&lt;/span&gt;(err)
	}
	fmt.&lt;span style=&#34;color:#008b45&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;02繼續執行...&amp;#34;&lt;/span&gt;)
}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#008b45&#34;&gt;test&lt;/span&gt;()
	fmt.&lt;span style=&#34;color:#008b45&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;01繼續執行...&amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#008b45&#34;&gt;test02&lt;/span&gt;()
	fmt.&lt;span style=&#34;color:#008b45&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;03繼續執行...&amp;#34;&lt;/span&gt;)
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>順序查找</title>
        <link>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%A0%86%E5%BA%8F%E6%9F%A5%E6%89%BE/</link>
        <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%A0%86%E5%BA%8F%E6%9F%A5%E6%89%BE/</guid>
        <description>柚子茶室 https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%A0%86%E5%BA%8F%E6%9F%A5%E6%89%BE/ -&lt;h1 id=&#34;順序查找&#34;&gt;順序查找&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func main() {
	names := [4]string{&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot;, &amp;quot;D&amp;quot;}
	var input = &amp;quot;&amp;quot;
	fmt.Println(&amp;quot;輸入...&amp;quot;)
	fmt.Scanln(&amp;amp;input)
	//順序查找
	// for i := 0; i &amp;lt; len(names); i++ {
	// 	if input == names[i] {
	// 		fmt.Printf(&amp;quot;找到%v,下標=%v \n&amp;quot;, input, i)
	// 		break
	// 	} else if i == len(names)-1 {
	// 		fmt.Println(&amp;quot;比對失敗...&amp;quot;)
	// 	}

	//順序查找2
	index := -1
	for i := 0; i &amp;lt; len(names); i++ {
		if input == names[i] {
			index = i
			break
		}
	}
	if index != -1 {
		fmt.Printf(&amp;quot;找到%v,下標=%v \n&amp;quot;, input, index)
	} else {
		fmt.Println(&amp;quot;比對失敗...&amp;quot;)
	}
}
&lt;/code&gt;&lt;/pre&gt;- https://yoziming.github.io/post/210810-%E5%B0%9A%E7%A1%85%E8%B0%B7go%E5%9F%BA%E7%A4%8E%E8%AA%B2-%E9%A0%86%E5%BA%8F%E6%9F%A5%E6%89%BE/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>範例文章</title>
        <link>https://yoziming.github.io/post/200101-example/</link>
        <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/200101-example/</guid>
        <description>柚子茶室 https://yoziming.github.io/post/200101-example/ -&lt;h1 id=&#34;heading-1--一級標題字&#34;&gt;Heading 1 | 一級標題字&lt;/h1&gt;
&lt;h2 id=&#34;heading-2--二級標題字&#34;&gt;Heading 2 | 二級標題字&lt;/h2&gt;
&lt;h3 id=&#34;heading-3--三級標題字&#34;&gt;Heading 3 | 三級標題字&lt;/h3&gt;
&lt;h4 id=&#34;以此類推&#34;&gt;以此類推&lt;/h4&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;引言 | Blockquotes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;內文
strud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;程式碼&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;fmt.&lt;span style=&#34;color:#008b45&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;序列&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一列 | First item&lt;/li&gt;
&lt;li&gt;第二列 | Second item
&lt;ul&gt;
&lt;li&gt;第二列的第一子列 | Second item First subitem&lt;/li&gt;
&lt;li&gt;第二列的第二子列 | Second item second subitem
&lt;ul&gt;
&lt;li&gt;第二列的第二子列的第一子子列 | Second item Second subitem First sub-subitem&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二列的第三子列 | Second item Third subitem
&lt;ol&gt;
&lt;li&gt;第二列的第三子列的第一有序子子列 | Second item Third subitem First sub-subitem&lt;/li&gt;
&lt;li&gt;第二列的第三子列的第二有序子子列 | Second item Third subitem Second sub-subitem&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
- https://yoziming.github.io/post/200101-example/ - yoziming</description>
        </item>
    
    
    
    
    
    
    
    
  </channel>
</rss> 