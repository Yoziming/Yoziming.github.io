<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yoziming&#39; Blog</title>
    <link>https://yoziming.github.io/</link>
    <description>Recent content on yoziming&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>yoziming</copyright>
    <lastBuildDate>Wed, 17 Nov 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://yoziming.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>尚硅谷JAVA基礎課-DAY02筆記</title>
        <link>https://yoziming.github.io/post/211117-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day02%E7%AD%86%E8%A8%98/</link>
        <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211117-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day02%E7%AD%86%E8%A8%98/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211117-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day02%E7%AD%86%E8%A8%98/ -&lt;h1 id=&#34;day02筆記&#34;&gt;DAY02筆記&lt;/h1&gt;
&lt;h3 id=&#34;關鍵字&#34;&gt;關鍵字&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;有特殊含意與用途，所有關鍵字都是小寫&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如:if、new&amp;hellip;等等，後面都會一一接觸到&lt;/p&gt;
&lt;h3 id=&#34;保留字&#34;&gt;保留字&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;未來版本可能會用到而保留&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如:goto、const&lt;/p&gt;
&lt;h3 id=&#34;標識符identifier&#34;&gt;標識符(identifier)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;可以自己命名的(類、變量、函數&amp;hellip;等)就叫標識符&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;由字母、數字、_、$組成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;數字不可為開頭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;能包含關鍵字但不能純用關鍵字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;嚴格區分大小寫&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不能包含空格&lt;/p&gt;
&lt;h4 id=&#34;命名規範&#34;&gt;命名規範&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;不強制但最好遵守&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;包名:多單詞所有字母小寫aaabbbccc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;類名、接口名:大駝峰(首字母大寫)AaaBbbCcc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;變量名、方法名:開頭小寫後面首字母大寫(小駝峰)aaaBbbCcc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常量名:全大寫，用下畫線相連AAA_BBB_CCC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命名要有意義，見名知意&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;變量variable&#34;&gt;變量(variable)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;記憶體中的一個儲存區域，使用的基本單位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;必須先聲明，後使用&lt;/li&gt;
&lt;li&gt;作用域在其定義所在的一對{}內，只在其作用域中有效&lt;/li&gt;
&lt;li&gt;同一作用域中不可重複&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;內置數據類型&#34;&gt;內置數據類型&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Java語言提供了八種基本類型。 六種數字類型（四個整數型，兩個浮點型），一種字符類型，還有一種布爾型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;byte：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;byte數據類型是8位、有符號的，以二進制補碼表示的整數&lt;/li&gt;
&lt;li&gt;最小值是-128（-2^7）最大值是127（2^7-1）默認值是0&lt;/li&gt;
&lt;li&gt;byte類型用在大型數組中節約空間，主要代替整數，因為byte變量佔用的空間只有int類型的四分之一&lt;/li&gt;
&lt;li&gt;例子：byte a = 100，byte b = -50。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;short：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;short數據類型是16位、有符號的以二進制補碼表示的整數&lt;/li&gt;
&lt;li&gt;最小值是-32768（-2^15）最大值是32767（2^15 - 1）默認值是0&lt;/li&gt;
&lt;li&gt;Short數據類型也可以像byte那樣節省空間。 一個short變量是int型變量所佔空間的二分之一&lt;/li&gt;
&lt;li&gt;例子：short s = 1000，short r = -20000。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;int：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int數據類型是32位、有符號的以二進制補碼表示的整數&lt;/li&gt;
&lt;li&gt;最小值是-2,147,483,648（-2^31）最大值是2,147,483,647（2^31 - 1）默認值是0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一般整型變量默認為int類型&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;例子：int a = 100000, int b = -200000。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;long：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;long數據類型是64位、有符號的以二進制補碼表示的整數&lt;/li&gt;
&lt;li&gt;最小值是-9,223,372,036,854,775,808（-2^63）&lt;/li&gt;
&lt;li&gt;最大值是9,223,372,036,854,775,807（2^63 -1）&lt;/li&gt;
&lt;li&gt;這種類型主要使用在需要比較大整數的系統上&lt;/li&gt;
&lt;li&gt;必須以L(大小都可)結尾，不加自動被當成int&lt;/li&gt;
&lt;li&gt;默認值是0L&lt;/li&gt;
&lt;li&gt;例子： long a = 100000L，Long b = -200000L。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;float：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;float數據類型是單精度、32位、符合IEEE 754標準的浮點數&lt;/li&gt;
&lt;li&gt;float在儲存大型浮點數組的時候可節省內存空間&lt;/li&gt;
&lt;li&gt;必須以F(大小都可)結尾，不加報錯&lt;/li&gt;
&lt;li&gt;默認值是0.0f&lt;/li&gt;
&lt;li&gt;浮點數不能用來表示精確的值，如貨幣&lt;/li&gt;
&lt;li&gt;例子：float f1 = 234.5f。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;double：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;double數據類型是雙精度、64位、符合IEEE 754標準的浮點數&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;浮點數的默認類型為double類型&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;double類型同樣不能表示精確的值，如貨幣&lt;/li&gt;
&lt;li&gt;默認值是0.0d&lt;/li&gt;
&lt;li&gt;例子：double d1 = 123.4。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;char：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;char類型是一個單一的16位Unicode字符(兩個字節)&lt;/li&gt;
&lt;li&gt;最小值是&#39;\u0000&#39;（即為0）最大值是&#39;\uffff&#39;（即為65,535）&lt;/li&gt;
&lt;li&gt;char數據類型可以儲存任何字符，包含轉義字符(如\n、\t等等)&lt;/li&gt;
&lt;li&gt;例子：char letter = &amp;lsquo;A&amp;rsquo;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;boolean：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;boolean數據類型表示一位的信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只有兩個取值：true和false默認值是false&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;這種類型只作為一種標誌來記錄true/false情況&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;實際大小不定，取決於虛擬機&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;例子：boolean one = true。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;自動類型提升&#34;&gt;自動類型提升&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;針對上面7種基礎數據類型混合運算時(不含boolean)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不同類型運算時容量小的提升為大的，注意容量指的是數的范蓋範圍，例如64位的long可以提升成32位的float(代價是丟失精度)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;byte、char、short -&amp;gt; int -&amp;gt; long -&amp;gt; float -&amp;gt; double&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;char因為在0~65535有可能在byte與short之間變動，但總之byte、short、char三者做運算時結果必須為int型(例如byte+byte=int)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;強制類型轉換&#34;&gt;強制類型轉換&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;自動類型提升的逆運算&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;double d1 = 12.3;
int i1 = (int)d1; // 截斷操作
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;使用強轉符:()&lt;/li&gt;
&lt;li&gt;可能導致精度損失或溢出&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;引用類型&#34;&gt;引用類型&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;包含:字符串(string)、類(class)、接口(interface)、數組(array)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在Java中，引用類型的變量非常類似於C/C++的指針。 引用類型指向一個對象，指向對象的變量是引用變量。 這些變量在聲明時被指定為一個特定的類型，比如Employee、Pubby等。 變量一旦聲明後，類型就不能被改變了。&lt;/li&gt;
&lt;li&gt;所有引用類型的默認值都是null。&lt;/li&gt;
&lt;li&gt;一個引用變量可以用來引用與任何與之兼容的類型。&lt;/li&gt;
&lt;li&gt;例子：Site site = new Site(&amp;ldquo;w3big&amp;rdquo;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;字符串string&#34;&gt;字符串(string)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;聲明: String s1 = &amp;ldquo;xxx&amp;rdquo;&lt;/li&gt;
&lt;li&gt;String可以跟8種基礎數據類型做運算，且只能是連接運算(+)，結果仍是String類型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;n進制&#34;&gt;N進制&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;N進制轉十進制: 指數加權法&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;image-20211117191625174.png&#34; alt=&#34;image-20211117191625174&#34;&gt;&lt;/li&gt;
&lt;li&gt;十進制轉N進制:除N取餘的逆&lt;/li&gt;
&lt;li&gt;最高位(符號位): 0正1負&lt;/li&gt;
&lt;li&gt;正數: 原碼=反碼=補碼&lt;/li&gt;
&lt;li&gt;負數: 除符號位以外其餘取反&lt;/li&gt;
&lt;li&gt;補碼: 反碼 + 1(可能會進位)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;電子數據底層儲存的是補碼!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;運算符&#34;&gt;運算符&lt;/h3&gt;
- https://yoziming.github.io/post/211117-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day02%E7%AD%86%E8%A8%98/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>LeetCodeEasy1-3</title>
        <link>https://yoziming.github.io/post/211116-leetcodeeasy1-3/</link>
        <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211116-leetcodeeasy1-3/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211116-leetcodeeasy1-3/ -&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/two-sum&#34;&gt;1. Two Sum&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;求某數組中哪兩位數的和等於X&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;// nums []int=傳入的數組；target=X
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;twoSum&lt;/span&gt;(nums []&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;, target &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;) []&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; {

    
	m := &lt;span style=&#34;color:#658b00&#34;&gt;make&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;]&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#658b00&#34;&gt;len&lt;/span&gt;(nums))

	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; i, num := &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;range&lt;/span&gt; nums {
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; idx, ok := m[target-num]; ok {
			&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; []&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;{idx, i}
		}
		m[num] = i
	}
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; []&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;{&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/palindrome-number&#34;&gt;9. Palindrome Number&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;判斷是否為迴文數字，例如121&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/roman-to-integer&#34;&gt;13. Roman to Integer&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;羅馬字母轉成數字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;	&lt;span style=&#34;color:#228b22&#34;&gt;// s=傳入的羅馬字串
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;romanToInt&lt;/span&gt;(s &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; {
    &lt;span style=&#34;color:#228b22&#34;&gt;// 創一個map將所有羅馬字對應數值
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; romanMap = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;byte&lt;/span&gt;]&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;{&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;I&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;V&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;L&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b452cd&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b452cd&#34;&gt;500&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b452cd&#34;&gt;1000&lt;/span&gt;}
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; result = romanMap[s[&lt;span style=&#34;color:#658b00&#34;&gt;len&lt;/span&gt;(s)-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;]] &lt;span style=&#34;color:#228b22&#34;&gt;// 先取最右邊的那1位羅馬字是多少
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; i := &lt;span style=&#34;color:#658b00&#34;&gt;len&lt;/span&gt;(s) - &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;; i &amp;gt;= &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i-- { &lt;span style=&#34;color:#228b22&#34;&gt;// 從右2羅馬字開始往左數
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; romanMap[s[i]] &amp;lt; romanMap[s[i+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;]] { &lt;span style=&#34;color:#228b22&#34;&gt;// 如果羅馬字右邊&amp;gt;左邊，例如IV或IX這種情況，表示要減去左邊位
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			result -= romanMap[s[i]]
		} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
			result += romanMap[s[i]] &lt;span style=&#34;color:#228b22&#34;&gt;// 否則相加
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		}
		&lt;span style=&#34;color:#228b22&#34;&gt;// 循環至i=0，也就是最左邊的羅馬字位也算完即是最終答案
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;	}
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; result
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://yoziming.github.io/post/211116-leetcodeeasy1-3/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>尚硅谷JAVA基礎課-DAY01筆記</title>
        <link>https://yoziming.github.io/post/211116-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day01%E7%AD%86%E8%A8%98/</link>
        <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211116-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day01%E7%AD%86%E8%A8%98/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211116-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day01%E7%AD%86%E8%A8%98/ -&lt;h1 id=&#34;day01&#34;&gt;DAY01&lt;/h1&gt;
&lt;h3 id=&#34;常用dos操作&#34;&gt;常用DOS操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cd=進入指定目錄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cd..=回上層&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cd=回到根目錄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;變更硬碟目錄=直接輸入d:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dir=列出當前目錄下的清單&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;del=刪除檔案(對文件夾使用=刪除文件內所有檔案)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;md=創建目錄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rd=刪除目錄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;exit=退出&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;java體系在不同平台的版本演化&#34;&gt;JAVA體系在不同平台的版本演化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JAVA SE，標準版，桌面級應用等，基礎API&lt;/li&gt;
&lt;li&gt;JAVA EE，企業版，主要用於Web開發，包含Servlet、JSP等技術&lt;/li&gt;
&lt;li&gt;JAVA ME，小型版，古老的PDA、手機等，已過時&lt;/li&gt;
&lt;li&gt;JAVA Card，面向小程序(Applets)，運行在小設備(如智能卡)等平台&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;java語言特性&#34;&gt;JAVA語言特性&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;由繼承的脈絡可說JAVA是類C語言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;強制面向對象:先搞懂何謂&amp;quot;類&amp;quot;與&amp;quot;對象&amp;quot;
&lt;ul&gt;
&lt;li&gt;三大特性:封裝、繼承、多態&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;健壯性:強類型、異常處理、GC(垃圾回收)、丟棄指針等&lt;/li&gt;
&lt;li&gt;跨平台:只要平台能跑JVM(虛擬機)就能跑JAVA&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;java語言的環境&#34;&gt;JAVA語言的環境&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;JDK&amp;gt;JRE&amp;gt;JVM&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;JDK，JAVA Development Kit，開發工具包，給開發人員用的，包含了JRE以及編譯工具(javac.exe)、打包工具(jar.exe)&amp;hellip;等等。&lt;/li&gt;
&lt;li&gt;JRE，JAVA Runtime Environment，運行環境，包含JVM虛擬機和運作需要的核心類庫等等，簡單說就是運行由JDK做好的東西。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;java環境配置&#34;&gt;JAVA環境配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下載JDK 8u202版本，最後的商用免費版(若純個人使用不論版本都是免費的)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置環境變數(win10為例)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PATH=windows cmd執行命令語句時搜索執行檔的位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;WIN10-設定-系統(左上)-關於(左下)-進階系統設定(右方)-進階-環境變數-系統變數
PATH=%JAVA_HOME%;%JAVA_HOME%\bin
JAVA_HOME=G:\JAVA\jdk1.8.0_202\ (你的JDK安裝位置)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;檢驗，任意處開一個cmd，輸入&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java -version
javac.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;java的編譯&#34;&gt;JAVA的編譯&lt;/h3&gt;
&lt;p&gt;.java(源文件) -&amp;gt; javac.exe(編譯) -&amp;gt; .class(二進制文件) -&amp;gt; java.exe(運行) -&amp;gt; 結果&lt;/p&gt;
&lt;h3 id=&#34;helloworld&#34;&gt;HelloWorld&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;記事本創建一個HelloWorld.java&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class HelloWorld {
   public static void main(String[] args)
   {
      System.out.println(&amp;quot;Hello World!&amp;quot;);
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;開啟cmd，編譯之&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;javac HelloWorld.java
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;執行剛剛編譯出來的HelloWorld.class&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java HelloWorld
(注意後面不要加.class，win10會報錯)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;java的注釋&#34;&gt;JAVA的注釋&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;編譯後的.class文件不包含注釋訊息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;單行注釋&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 這是一條單行注釋
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多行注釋(注意不可嵌套使用)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/*
這是多行注釋1
這是多行注釋2
*/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文檔注釋(JAVA特有)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/**
這是文檔注釋
@author 指定作者
@version 版本
*/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;文檔注釋的內容可以被javadoc解析，生成說明文檔，舉例:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;javadoc -d xxx(生成說明的文件夾名稱) -author -version -encoding utf-8 xxx.java
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意兩點:首先需要是一個public class；若有編碼問題加入-encoding utf-8&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;day01小結&#34;&gt;DAY01小結&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;應用程式=演算法(關乎是否正確)+數據結構(關乎儲存的效率)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JAVA的程序編寫-運行過程:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;編寫:透過IDE編輯，保存為.java格式
編譯:透過javac命令編譯，轉換為.class格式
運行:透過JRE運行
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在一個.java文件中可以聲明多個class(有幾個編譯時就產生幾個)，但最多只能有一個類為public，且聲明為public的類名必須與源文件名相同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程序的入口為main()方法，格式固定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一行執行語句都以分號&amp;quot;;&amp;ldquo;結束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保持好習慣&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. 寫注釋
2. 行尾風格，例如:class HelloWorld {
3. 運算符號左右加空格，例如:1 + 2 * 3
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://yoziming.github.io/post/211116-%E5%B0%9A%E7%A1%85%E8%B0%B7java%E5%9F%BA%E7%A4%8E%E8%AA%B2-day01%E7%AD%86%E8%A8%98/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>修改css或js後瀏覽器快取不更新問題</title>
        <link>https://yoziming.github.io/post/211017-%E4%BF%AE%E6%94%B9css%E6%88%96js%E5%BE%8C%E7%80%8F%E8%A6%BD%E5%99%A8%E5%BF%AB%E5%8F%96%E4%B8%8D%E6%9B%B4%E6%96%B0%E5%95%8F%E9%A1%8C/</link>
        <pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211017-%E4%BF%AE%E6%94%B9css%E6%88%96js%E5%BE%8C%E7%80%8F%E8%A6%BD%E5%99%A8%E5%BF%AB%E5%8F%96%E4%B8%8D%E6%9B%B4%E6%96%B0%E5%95%8F%E9%A1%8C/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211017-%E4%BF%AE%E6%94%B9css%E6%88%96js%E5%BE%8C%E7%80%8F%E8%A6%BD%E5%99%A8%E5%BF%AB%E5%8F%96%E4%B8%8D%E6%9B%B4%E6%96%B0%E5%95%8F%E9%A1%8C/ -&lt;h1 id=&#34;修改css或js後瀏覽器快取不更新問題&#34;&gt;修改css或js後瀏覽器快取不更新問題&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;當初我真的是被這個整到懷疑人生&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解決方式一：&lt;/p&gt;
&lt;p&gt;​    使用者按Ctrl + F5強制重新整理頁面或者手動清空了瀏覽器的快取。此時瀏覽器會重新向伺服器獲取CSS和JS檔案,新的檔案便會生效。&lt;/p&gt;
&lt;p&gt;解決方式二：&lt;/p&gt;
&lt;p&gt;​    但是使用者量過大的時候總不能讓每個使用者一一清理快取吧，於是便從程式碼的角度著手解決這個問題。在js後面新增版本號，讓瀏覽器把這個JS檔案當做新的檔案重新向伺服器獲取資源。&lt;/p&gt;
&lt;p&gt;加版本號前：&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;type&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;th:src&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;@{/js/test/index.js}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;加版本號後：&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;type&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;th:src&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;@{/js/test/index.js?v=1.0}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;參考&#34;&gt;參考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.itread01.com/content/1548610940.html&#34;&gt;https://www.itread01.com/content/1548610940.html&lt;/a&gt;&lt;/p&gt;
- https://yoziming.github.io/post/211017-%E4%BF%AE%E6%94%B9css%E6%88%96js%E5%BE%8C%E7%80%8F%E8%A6%BD%E5%99%A8%E5%BF%AB%E5%8F%96%E4%B8%8D%E6%9B%B4%E6%96%B0%E5%95%8F%E9%A1%8C/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>Docker &amp; Hyper-V占用port問題</title>
        <link>https://yoziming.github.io/post/211015-docker-hyper-v%E5%8D%A0%E7%94%A8port%E5%95%8F%E9%A1%8C/</link>
        <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211015-docker-hyper-v%E5%8D%A0%E7%94%A8port%E5%95%8F%E9%A1%8C/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211015-docker-hyper-v%E5%8D%A0%E7%94%A8port%E5%95%8F%E9%A1%8C/ -&lt;h1 id=&#34;docker--hyper-v占用port問題&#34;&gt;Docker &amp;amp; Hyper-V占用port問題&lt;/h1&gt;
&lt;p&gt;在window下用docker desktop有時候遇上port被莫名佔用
用指令&lt;code&gt;netstat -ano | findstr xxx&lt;/code&gt;查詢xxx埠被誰佔用卻又顯示沒有&lt;/p&gt;
&lt;p&gt;原來是因為在window下用docker需要依賴hyper-v技術，
而這個hyper-v每次都會隨機搶走一部分tcp埠，使用命令可以得知應避開的範圍:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# powershell / cmd&lt;/span&gt;
netsh interface ipv4 show excludedportrange protocol=tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;如果避不開就手動叫hyper-v讓路&#34;&gt;如果避不開就手動叫Hyper-V讓路&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;關閉hyper-v&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# powershell / cmd&lt;/span&gt;
dism.exe /Online /&lt;span style=&#34;color:#658b00&#34;&gt;Disable-Feature&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#658b00&#34;&gt;Microsoft-Hyper&lt;/span&gt;-V
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置ipv4動態埠 / 或者配置需要的埠不被佔用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# powershell / cmd 管理員許可權&lt;/span&gt;
&lt;span style=&#34;color:#228b22&#34;&gt;# start 起始埠  num 表示可用埠數     按自己的需求來&lt;/span&gt;
netsh int ipv4 &lt;span style=&#34;color:#658b00&#34;&gt;set &lt;/span&gt;dynamicport tcp start=30000 num=16383
// 叫他去用30000以後的阜

&lt;span style=&#34;color:#228b22&#34;&gt;# 排除ipv4動態埠佔用 startport 起始埠 numberofports 埠數&lt;/span&gt;
netsh int ipv4 add excludedportrange protocol=tcp startport=50051 numberofports=1
// 或是指定端口50051為要讓路的
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重新啟動hyper-v&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fdocker%2Ffor-win%2Fissues%2F3171%23issuecomment-459205576&#34;&gt;https://github.com/docker/for-win/issues/3171#issuecomment-459205576&lt;/a&gt;&lt;/p&gt;
- https://yoziming.github.io/post/211015-docker-hyper-v%E5%8D%A0%E7%94%A8port%E5%95%8F%E9%A1%8C/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>ubuntu常用操作</title>
        <link>https://yoziming.github.io/post/211010-ubuntu%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
        <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211010-ubuntu%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211010-ubuntu%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/ -&lt;h1 id=&#34;ubuntu常用操作&#34;&gt;ubuntu常用操作&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;ubuntu 屋奔兔，算是最常見的Linux系統&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;// 解壓縮XX檔案到/usr/local
sudo tar -C /usr/local -xzvf go1.17.1.linux-amd64.tar.gz&lt;/p&gt;
&lt;p&gt;// 文字編輯器
sudo gedit /home/yoziming/.config/go/env&lt;/p&gt;
&lt;p&gt;// 檔案總管
sudo nautilus&lt;/p&gt;
&lt;p&gt;// 啟用go mod
go env -w GO111MODULE=on&lt;/p&gt;
- https://yoziming.github.io/post/211010-ubuntu%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>Kubernetes基礎認識</title>
        <link>https://yoziming.github.io/post/211006-k8s/</link>
        <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211006-k8s/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211006-k8s/ -&lt;h1 id=&#34;kubernetes基礎認識&#34;&gt;Kubernetes基礎認識&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;自動化地以容器的形式管理你的應用程式
To host your application in the form of containers in a automated fashion&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20211014130933320.png&#34; alt=&#34;image-20211014130933320&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;名詞解釋&#34;&gt;名詞解釋&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cluster:集群，計算、儲存資源的集合。一個Cluster通常包含一個Controller Plane和數個Node，視需求而定(也可能有Multi-Controller Plane 的集群)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Controller Plane:(以前叫Mater)控制主節點，調度指揮所
&lt;ul&gt;
&lt;li&gt;APIserver:管理整個 K8s 所需 API 的接口(Endpoint)，提供HTTP Rest介面的關鍵服務處理程序，是集群中各個節點的溝通橋樑&lt;/li&gt;
&lt;li&gt;etcd:存資料&lt;/li&gt;
&lt;li&gt;Scheduler:資源調配，例如調度Pod運行在哪個Node&lt;/li&gt;
&lt;li&gt;Controller-manager:總經理，負責管理並運行 &lt;code&gt;controller&lt;/code&gt; ，controller定義各種Pod的部屬特性(如最常用的Deployment)來滿足不同的業務場景&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node:節點，讓物件(resource-objects)運行的實體或虛擬機器
&lt;ul&gt;
&lt;li&gt;kubelet:對應api-server的接口，可以看成每個Node上的&amp;quot;實際執行者&amp;quot;或&amp;quot;操作者&amp;quot;，負責接收來自api-server的訊息，並做出相對應的動作，例如，負責Pod對應的容器的建立、啟動或停止等。&lt;/li&gt;
&lt;li&gt;kube-proxy:維護網路規則(iptables)，這些規則允許從群集內部或外部的與Pod進行通訊。&lt;/li&gt;
&lt;li&gt;Container Runtime:容器的運行引擎，預設是Docker，也支援其他滿足CRI標準的。
&lt;ul&gt;
&lt;li&gt;Pod:可被調度的最小單位，每個Pod包含一或多個容器，Pod內共享生命週期、資源、通信(使用同一個網路namespace，即相同的IP與port)、儲存空間。通常使用是一個Pod中放一個容器；當需要高度共享資源時才會用一個Pod內多個容器的形式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;延伸觀念&#34;&gt;延伸觀念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Deployment:部屬，例如把Pod做橫向擴展，適用自動管理，或達成無停機系統升級&lt;/li&gt;
&lt;li&gt;Service:服務，Deployment可以部屬多個Pod，每個Pod都有自己的IP，隨時都在生滅浮動，外界如何訪問? 答案就是透過Service，可以說Controller負責運行Pod，而Service負責訪問Pod。&lt;/li&gt;
&lt;li&gt;Ingress:Service 中是將每個 Service 元件對外的 port number 跟 Node 上的 port number 做 mapping，這樣在我們的 Service 變多時，port number 以及分流規則的管理變得相當困難。而 Ingress 可以透過 HTTP/HTTPS，在我們眾多的 Service 前搭建一個 reverse-proxy。這樣 Ingress 可以幫助我們統一一個對外的 port number，並且根據 hostname 或是 pathname 決定封包要轉發到哪個 Service 上&lt;/li&gt;
&lt;li&gt;Namespace:命名空間，假如有多個用戶使用同一個Cluster，想把他們創建的Controller、Pod等資源分開，就靠Namespace。Namespace將物理的Cluster從邏輯上切成多個虛擬Cluster，每一個虛擬Cluster就是一個Namespace，不同Namespace中的資源完全隔離。K8s默認創建2個Namespace:
&lt;ul&gt;
&lt;li&gt;default:如果不指定，資源就預設放這&lt;/li&gt;
&lt;li&gt;kube-system:K8s自己創建的系統資源會放在這個Namespace中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
- https://yoziming.github.io/post/211006-k8s/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>MySQL常用語句 &amp; Workbench</title>
        <link>https://yoziming.github.io/post/211005-mysql-%E5%B8%B8%E7%94%A8%E8%AA%9E%E5%8F%A5/</link>
        <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211005-mysql-%E5%B8%B8%E7%94%A8%E8%AA%9E%E5%8F%A5/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211005-mysql-%E5%B8%B8%E7%94%A8%E8%AA%9E%E5%8F%A5/ -&lt;h1 id=&#34;mysql-常用語句&#34;&gt;MySQL 常用語句&lt;/h1&gt;
&lt;p&gt;資料庫database&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;create database XXX;
show databases;
use XXX;
drop database XXX;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;資料表table&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;create table mytable(school char(5),name char(10),id int);
show tables;
describe mytable; // 顯示這表有哪些欄位跟屬性
drop table mytable;
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;select * from mytable; // 顯示mytable中所有資料

insert into mytable(school, name, id) values (&#39;NCTU&#39;,&#39;Jerry&#39;,&#39;123&#39;);
insert into mytable values (&#39;NCTU&#39;,&#39;Jerry&#39;,&#39;123&#39;);

update mytable set name = &#39;HaHa&#39; where id = &#39;123&#39;;

delete from mytable where name = &#39;HaHa&#39;;
delete from 表格; // 把表格內資料都刪除(但格式宣告還在)

select * from mytable where id = &#39;123&#39; order by name DESC;  // 資料表查詢+條件+排序 (DESC 代表由大到小排序)

load data local infile &amp;quot;c:\\data.txt&amp;quot; into table mytable; //匯入
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;mysql-workbench-常用操作&#34;&gt;MySQL Workbench 常用操作&lt;/h1&gt;
&lt;h3 id=&#34;欲編輯某張表的某個資料&#34;&gt;欲編輯某張表的某個資料&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在左方導航點開那張表，移到它的右上角可以看資訊、進入編輯模式等等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;image-20211016183042070.png&#34; alt=&#34;image-20211016183042070&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;對資料欄位左鍵2下修改，改完之後按Apply，會跳出sql語句的確定視窗，再次Apply後應用&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;導出入資料&#34;&gt;導出/入資料 &lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;上方選到 Server &amp;gt; Data Import，會出現這個畫面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;image-20211016183300110.png&#34; alt=&#34;image-20211016183300110&#34;&gt;&lt;/p&gt;
&lt;p&gt;照著按就是了，導出也差不多，不過導出可以選擇是否含格式還是單純資料值&lt;/p&gt;
- https://yoziming.github.io/post/211005-mysql-%E5%B8%B8%E7%94%A8%E8%AA%9E%E5%8F%A5/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>Docker啟用Redis</title>
        <link>https://yoziming.github.io/post/211002-docker%E5%95%9F%E7%94%A8redis/</link>
        <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211002-docker%E5%95%9F%E7%94%A8redis/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211002-docker%E5%95%9F%E7%94%A8redis/ -&lt;h1 id=&#34;docker啟用redis&#34;&gt;Docker啟用Redis&lt;/h1&gt;
&lt;h2 id=&#34;抓映象檔&#34;&gt;抓映象檔&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull redis:6.0
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;拉一個6.0版本的redis&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;執行-image&#34;&gt;執行 Image&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run --name redis6 -p 6379:6379 -d redis:6.0 redis-server --appendonly yes
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;–name redis6 ：將 Container 取名為 redis6&lt;/li&gt;
&lt;li&gt;-p 6379:6379 ：將 Container 的 6379 Port 映射到主機的 6379 Port (前面代表主機，後面代表容器)&lt;/li&gt;
&lt;li&gt;-d :後台執行 Container ，並返回ID&lt;/li&gt;
&lt;li&gt;redis-server –appendonly yes : 在 Container 執行 redis-server 啟動命令，並打開redis持久化配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;進入-container&#34;&gt;進入 Container&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker exec -it redis6 bash
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;-i ：即使沒有附加也保持STDIN 打開&lt;/li&gt;
&lt;li&gt;-t ：分配一個偽終端&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;資料庫測試&#34;&gt;資料庫測試&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;redis-cli
set hello world
get hello
&lt;/code&gt;&lt;/pre&gt;- https://yoziming.github.io/post/211002-docker%E5%95%9F%E7%94%A8redis/ - yoziming</description>
        </item>
    
    
    
        <item>
        <title>Docker啟用Mysql</title>
        <link>https://yoziming.github.io/post/211001-docker%E5%95%9F%E7%94%A8mysql/</link>
        <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yoziming.github.io/post/211001-docker%E5%95%9F%E7%94%A8mysql/</guid>
        <description>yoziming&#39; Blog https://yoziming.github.io/post/211001-docker%E5%95%9F%E7%94%A8mysql/ -&lt;h1 id=&#34;docker啟用mysql&#34;&gt;Docker啟用Mysql&lt;/h1&gt;
&lt;h2 id=&#34;抓映象檔&#34;&gt;抓映象檔&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull mysql/mysql-server:8.0
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;拉一個8.0版本的mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;執行-image&#34;&gt;執行 Image&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -d -it --name mysql8 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=1234 -e MYSQL_DATABASE=mydb mysql:8 --default-authentication-plugin=mysql_native_password
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;：同&lt;code&gt;--detach&lt;/code&gt;，以背景模式執行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v ~/mysql-docker-data:/var/lib/mysql&lt;/code&gt;：同&lt;code&gt;--volume&lt;/code&gt;，掛載host目錄到container目錄，也就是host的&lt;code&gt;~/mysql-docker-data&lt;/code&gt;會保存container &lt;code&gt;/var/lib/mysql&lt;/code&gt;的資料；windos docker app這樣做的話，資料是暫時的重開機後會不見。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-it&lt;/code&gt;：同&lt;code&gt;--interactive&lt;/code&gt;加&lt;code&gt;--tty&lt;/code&gt;，作用為運行container時可登入其bash操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--name mysql8&lt;/code&gt;，命名container名稱為&lt;code&gt;mysql8&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;：同&lt;code&gt;--publish&lt;/code&gt;。作用為將container的3306 port對映到&amp;quot;主機(host)&amp;ldquo;的3306 port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;：同&lt;code&gt;--env&lt;/code&gt;，設定環境變數。&lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt;設定MySQL root帳號的登入密碼為&lt;code&gt;1234&lt;/code&gt;，&lt;code&gt;MYSQL_DATABASE&lt;/code&gt;設定資料庫名稱為&lt;code&gt;mydb&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mysql:8&lt;/code&gt;：&lt;code&gt;mysql&lt;/code&gt;為image名稱，&lt;code&gt;8&lt;/code&gt;為image tag。所以運行的是&lt;code&gt;mysql:8&lt;/code&gt;的image。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--default-authentication-plugin=mysql_native_password&lt;/code&gt;：把儲存密碼的方式改為MySQL 5的&lt;code&gt;mysql_native_password&lt;/code&gt;，因為MySQL 8的儲存方式預設為&lt;code&gt;caching_sha2_password&lt;/code&gt;，但一些免費的MySQL client圖形工具如Sequel Pro，Navicat等會無法連線，所以設定此參數。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;檢視運行中的容器&#34;&gt;檢視運行中的容器&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;進入-container&#34;&gt;進入 Container&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker exec mysql8 mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker exec&lt;/code&gt;指令的作用為在運行的container執行指令，所以意思就是在&lt;code&gt;mysql8&lt;/code&gt;這個container執行&lt;code&gt;mysql -u root -p&lt;/code&gt;的指令。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker container exec -it mysql8 /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;遇到權限問題用這個&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;進入mysql&#34;&gt;進入Mysql&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql -uroot -p
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;新增-1-個開放外部連線的帳號&#34;&gt;新增 1 個開放外部連線的帳號&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER &#39;user01&#39;@&#39;%&#39; IDENTIFIED BY &#39;1234&#39;;
GRANT ALL ON your_database.* TO &#39;user01&#39;@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;IDENTIFIED BY &amp;lsquo;1234&amp;rsquo;=密碼&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;允許-mysql-被遠程訪問&#34;&gt;允許 MySQL 被遠程訪問&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grant all privileges on *.* to &#39;root&#39;@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;這是一個強力手段(有權限風險)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flush privileges;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;刷新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
- https://yoziming.github.io/post/211001-docker%E5%95%9F%E7%94%A8mysql/ - yoziming</description>
        </item>
    
    
  </channel>
</rss> 