<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>演算法 on yoziming&#39;s Blog</title>
    <link>https://yoziming.github.io/tags/%E6%BC%94%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 演算法 on yoziming&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>yoziming</copyright>
    <lastBuildDate>Tue, 16 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yoziming.github.io/tags/%E6%BC%94%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCodeEasy1-3</title>
      <link>https://yoziming.github.io/post/211116-leetcodeeasy1-3/</link>
      <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/211116-leetcodeeasy1-3/</guid>
      <description>1. Two Sum
 求某數組中哪兩位數的和等於X
 // nums []int=傳入的數組；target=X func twoSum(nums []int, target int) []int { m := make(map[int]int, len(nums)) for i, num := range nums { if idx, ok := m[target-num]; ok { return []int{idx, i} } m[num] = i } return []int{0, 0} } 9. Palindrome Number
 判斷是否為迴文數字，例如121
 13. Roman to Integer
 羅馬字母轉成數字
 // s=傳入的羅馬字串 func romanToInt(s string) int { // 創一個map將所有羅馬字對應數值 	var romanMap = map[byte]int{&amp;#39;I&amp;#39;: 1, &amp;#39;V&amp;#39;: 5, &amp;#39;X&amp;#39;: 10, &amp;#39;L&amp;#39;: 50, &amp;#39;C&amp;#39;: 100, &amp;#39;D&amp;#39;: 500, &amp;#39;M&amp;#39;: 1000} var result = romanMap[s[len(s)-1]] // 先取最右邊的那1位羅馬字是多少  for i := len(s) - 2; i &amp;gt;= 0; i-- { // 從右2羅馬字開始往左數 	if romanMap[s[i]] &amp;lt; romanMap[s[i+1]] { // 如果羅馬字右邊&amp;gt;左邊，例如IV或IX這種情況，表示要減去左邊位 	result -= romanMap[s[i]] } else { result += romanMap[s[i]] // 否則相加 	} // 循環至i=0，也就是最左邊的羅馬字位也算完即是最終答案 	} return result } </description>
    </item>
    
  </channel>
</rss>
