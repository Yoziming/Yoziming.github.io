<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HugoBlog on 柚子茶室</title>
    <link>https://yoziming.github.io/categories/hugoblog/</link>
    <description>Recent content in HugoBlog on 柚子茶室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>yoziming</copyright>
    <lastBuildDate>Wed, 01 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yoziming.github.io/categories/hugoblog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用bat一鍵更新HugoBlog</title>
      <link>https://yoziming.github.io/post/211201-blog-one-key-update/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/211201-blog-one-key-update/</guid>
      <description>一鍵更新   透過.bat一鍵打包+git發布上傳到你的github專案倉庫
  既然是個人的倉庫，首先要解決一個權限問題，否則隨便路人都可以亂上傳到你的倉庫豈不是亂套
  作法簡單來說，在電腦本機生成一個key(一串暗號)，然後到github網頁上設定，約好拿這個key來的人就允許上傳
  生成本機key $ ssh-keygen # 產生金鑰Generating public/private rsa key pair.Enter file in which to save the key : # 金鑰存放路徑，預設會放到我的文件/.ssh# 放哪不是特別重要，有強迫症可以自己改，否則直接按EnterEnter passphrase (empty for no passphrase): # 密碼，可設定可不設定，設定的話每次上傳會多需要輸入一次密碼Enter same passphrase again: # 再輸入一次密碼The key fingerprint is: # 之後會顯示你的 fingerprint，到這裡就完成 key 的產生了將key報備到專案  到生成的路徑，找id_rsa.pub，右鍵筆記本編輯打開，會看到很長一行開頭是&amp;quot;ssh-rsa &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.&amp;quot;，全選複製   回你的github專案   內容貼上剛剛複製的那行 自己給這個key起個名，懶得命名可以取剛剛那串最尾的&amp;quot;使用者@電腦&amp;quot;當名稱  建立批次執行檔 起一個.</description>
    </item>
    
    <item>
      <title>GoogleSearchConsole</title>
      <link>https://yoziming.github.io/post/211020-blog-ga/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/211020-blog-ga/</guid>
      <description>如何讓自己的blog被google搜尋到  首先你要跟google證明這個網站是你的，並且允許google的爬蟲機器人獲取你的網站資料，這樣別人才能在google上搜尋到你的網站 同時也能夠使用google自訂搜尋方便自己查找資料  關於網站驗證  你同意後它才能把觸手深入你的網站，你可以自訂搜尋這個網站的資料權限 google提供多種方法，我是選html標記，放在套用的主題的之下，舉例:   如果你換了主題記得也要重改  Hugo建立sitemap索引  提供sitemap索引讓google機器人更好抓你的網站 Hugo內鍵就有這個功能，修改config.toml，插入:  [sitemap]changefreq = &#39;weekly&#39;filename = &#39;sitemap.xml&#39;priority = 0.5自訂搜尋 大部分主題都有此功能，一樣修改config.toml即可:
googleSearchCode = &amp;quot;你的SearchCode&amp;quot;</description>
    </item>
    
    <item>
      <title>HugoBlog的圖片插入方式</title>
      <link>https://yoziming.github.io/post/210930-blog-insert-image/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/210930-blog-insert-image/</guid>
      <description>插入圖片的方式  常見有2種做法
 方法1  在.\static\images\下放入的圖片會被打包上傳，然後從相對路徑引用那個圖片 適和用在全站通用的資源，比如背景圖、縮圖  方法2   在.\content\post\下，每當有用到圖片一篇文章的就新增一個資料夾
  資料夾可以命名可自訂，然後進去把.md檔改名為&amp;quot;index.md&amp;quot;，圖片放同層
  範例:  這個方法比較好整理，每篇用到的圖片放在自己的資料夾中
  </description>
    </item>
    
    <item>
      <title>用Hugo建立靜態Blog</title>
      <link>https://yoziming.github.io/post/210909-blog-hugo/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/210909-blog-hugo/</guid>
      <description>用Github&amp;amp;Hugo建立靜態Blog  程式設計師寫blog再常見不過，好處多多不再贅述，但如何從0開始架出一個blog?
我看了很多教學有各種高級的自動部署、netlify後台等等，照做時卻老是在一些關鍵點卡住。我這個土路雖然蠢笨但確實能做出東西，同樣新手可以試試。
   安裝Chocolatey //程式安裝器，讓你從終端裝各種東西很方便
https://chocolatey.org/install到這個網址，官方提供很多方法安裝，非常簡單快速一行搞定安裝hugo，有些佈景主題要用到加強版(extended)
choco install hugo -confirmchoco install hugo-extended -confirm  hugo new site &amp;lt;資料夾名稱&amp;gt; //建立一個root，相當於你個人網站的原始資料母巢
  挑主題，到https://themes.gohugo.io/
  套用主題，範例
 cd &amp;lt;資料夾名稱&amp;gt;git initgit submodule add https://github.com/AmazingRise/hugo-theme-diary.git themes/diary  依照主題的說明文件修改根目錄下的config.toml 注意，config.toml中的第一項baseURL網址不要有&amp;quot;https://www.ooxx&amp;quot;，否則會造成一些未知的BUG。正確網址應為&amp;quot;https://你的username.github.io/&amp;quot;
  到content/post/下開始寫一篇blog
  開啟本地預覽，指令hugo server -F //防止時差問題用-F
  隨意一個地方開啟網址http://localhost:1313/ 看看網站
  網站沒問題就打包，指令hugo，會在root資料夾下多出一個public資料夾，裡面就是一個完整的網站準備丟去網路上發布
  去gitHub建一個Repository(倉庫)，名稱強制為 你的username.github.io
  下載GitHub Desktop客戶端，可以把他理解成一個雲端，我要把本地public資料夾的內容透過它丟去gitHub上剛剛建的那個Repository(倉庫)裡，之後就能透過網站提供的gitPage功能實現個人網站的搭建</description>
    </item>
    
  </channel>
</rss>
