<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on 柚子茶室</title>
    <link>https://yoziming.github.io/categories/java/</link>
    <description>Recent content in java on 柚子茶室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Yoziming</copyright>
    <lastBuildDate>Sun, 10 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://yoziming.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring載入yml中自訂值的幾種方法</title>
      <link>https://yoziming.github.io/post/220710-spring-autowire-value/</link>
      <pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/220710-spring-autowire-value/</guid>
      <description>用@Value獲取yml的值 基本用法: ${ property : default_value } SPEL用法: #{ obj.property? : default_value } 這個冒號:，可以防止找不到此yml的時候無法啟動，如果是多人開發且有多個yml不好同步管理的話，最好加上以免影響別人
動態載入yml中的值 對於沒有在啟動時就載入的Class卻又想獲取yml，可以這樣用
@Slf4j public class IL_BJ14Job implements Job { ApplicationContext appContext; CustomConfig customConfig; @Override public void execute(JobExecutionContext context) throws JobExecutionException { log.info(&amp;#34;BJ14 Process Begin = {}&amp;#34;, new Date()); if (appContext == null) appContext = ApplicationContextHolder.getContext(); customConfig = (CustomConfig) appContext.getBean(CustomConfig.class); customConfig.getMyName() 其中CustomConfig是用@ConfigurationProperties載入的設定，詳細可以參考
@ConfigurationProperties 注解使用姿势，这一篇就够了 - 纪莫 - 博客园
@Data @Component @ConfigurationProperties(prefix = &amp;#34;customize&amp;#34;) @Validated public class CustomConfig { @NotBlank private String myName; @Data public static class User{ private String username; private String password; private String url; } 對應的yml長這樣</description>
    </item>
    
  </channel>
</rss>
