<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IDE on 柚子茶室</title>
    <link>https://yoziming.github.io/categories/ide/</link>
    <description>Recent content in IDE on 柚子茶室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Yoziming</copyright>
    <lastBuildDate>Tue, 08 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://yoziming.github.io/categories/ide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IntelliJ IDEA File scope</title>
      <link>https://yoziming.github.io/post/220208-idea-file-scpoe/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/220208-idea-file-scpoe/</guid>
      <description>IDEA篩選檔案  IDEA預設的檔案瀏覽器真的很不優，我以前都很蠢的用搜尋然後一個一個翻。原來他還是能做到篩選的，就是步驟挺麻煩 首先要去scope裡面自己設定規則，還可以設定顏色之類的，參考官方: https://www.jetbrains.com/help/phpstorm/configuring-scopes-and-file-colors.html#predefined-scopes-list 一樣記得要設在&amp;quot;用於每個新專案&amp;quot;的設定，否則只會在當前專案生效 例如只想顯示設定檔，可以設定規則:  file:*.properties||file:*.yml||file:*.yaml  回到檔案瀏覽區，最好勾上compact，省得太多層資料夾會把列表拉得很長   切換到自定的scope規則，然後全部展開，就可以快速切換許多子模組的設定了   其他實用的篩選還有pom.xml、*config等等，可以自己發揮  </description>
    </item>
    
    <item>
      <title>Maven微服務多模組管理</title>
      <link>https://yoziming.github.io/post/220209-maven-parent-module/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/220209-maven-parent-module/</guid>
      <description>Maven多模組管理  groupId、artifactId、version稱為gav，三個必要項組成座標  &amp;lt;project&amp;gt; ... &amp;lt;dependencies&amp;gt;  &amp;lt;dependency&amp;gt;  &amp;lt;groupId&amp;gt;實際項目&amp;lt;/groupId&amp;gt; 　&amp;lt;artifactId&amp;gt;模塊&amp;lt;/artifactId&amp;gt; 　&amp;lt;version&amp;gt;版本&amp;lt;/version&amp;gt; 　&amp;lt;type&amp;gt;依賴類型&amp;lt;/type&amp;gt; 　&amp;lt;scope&amp;gt;依賴範圍&amp;lt;/scope&amp;gt; 　&amp;lt;optional&amp;gt;依賴是否可選&amp;lt;/optional&amp;gt; 　&amp;lt;!—主要用於排除傳遞性依賴--&amp;gt; 　&amp;lt;exclusions&amp;gt; 　&amp;lt;exclusion&amp;gt; 　&amp;lt;groupId&amp;gt;…&amp;lt;/groupId&amp;gt; 　&amp;lt;artifactId&amp;gt;…&amp;lt;/artifactId&amp;gt; 　&amp;lt;/exclusion&amp;gt; 　&amp;lt;/exclusions&amp;gt; 　&amp;lt;/dependency&amp;gt; &amp;lt;dependencies&amp;gt; ... &amp;lt;/project&amp;gt;   compile，預設的依賴範圍，表示依賴需要參與當前項目的編譯，後續的測試、運行週期也參與其中，是比較強的依賴。
  test，表示依賴僅僅參與測試相關的工作，包括測試代碼的編譯和運行。比較典型的如 junit。
  runntime，表示依賴無需參與到項目的編譯，不過後期的測試和運行需要其參與其中。
  provided，表示打包的時候可以不用包進去，別的容器會提供。和 compile 相當，但是在打包階段做了排除的動作。
  system，從參與程度上來説，和 provided 類似，但不通過 Maven 倉庫解析，可能會造成構建的不可移植，要謹慎使用。
   部分引用自 沉默王二 鏈接：https://juejin.cn/post/7033652977973854244
 父項目的作用  父項目繼承spring框架  繼承spring-boot-starter-parent同時也會繼承properties例如java.</description>
    </item>
    
    <item>
      <title>IntelliJ IDEA Live Templates</title>
      <link>https://yoziming.github.io/post/211203-idea-live-templates/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/211203-idea-live-templates/</guid>
      <description>IntelliJ IDEA Live Templates  盤點IDEA中Tab的實用招式，再配上alt+insert就能橫著走了
 基本聲明 psvm或main ▶ main 方法  st ▶ String  prsf ▶ private static final  psf ▶ public static final  psfi ▶ public static final int  psfs ▶ public static final String 創立物件 類名.new ▶ new 類名()  new 類名().var或.val ▶ 類 物件名 = new 類();  new 類名().field ▶ 在方法外聲明一個成員變量，並在這裡初始化一個 print sout ▶ System.out.println();  souf ▶ System.out.printf(&amp;#34;&amp;#34;);  &amp;#34;say something&amp;#34;.</description>
    </item>
    
    <item>
      <title>IntelliJ IDEA設定與常用快捷鍵</title>
      <link>https://yoziming.github.io/post/211117-idea-shortkey/</link>
      <pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yoziming.github.io/post/211117-idea-shortkey/</guid>
      <description>IDEA基礎設定   安裝的根目錄，舉例&amp;hellip;\IntelliJ IDEA 2021.2.3\bin\idea64.exe.vmoptions
 編輯這個idea64.exe.vmoptions，改成-Xmx1024m -Xms2048m    ctrl+alt+s開啟設定 -&amp;gt; plugins插件 -&amp;gt; 搜尋chinese -&amp;gt; 安裝重啟 -&amp;gt; 中文化
  plugins插件 -&amp;gt; 搜尋save actions-&amp;gt; 安裝重啟 -&amp;gt; 存檔時自動格式化
  外觀-使用自定義字體打勾-Sarasa mono&amp;hellip;，大小改14
  更紗黑體Sarasa-Gothic
 https://github.com/be5invis/Sarasa-Gothic 特性:融合Iosevka(程式碼常用的等寬字型)跟Source Han Sans(思源黑)，有等距、繁簡中日韓不缺字，簡直完美    編譯器-字體-一樣改，大小我是設18、行高1.1
  插件 常用快捷鍵 視窗  Close All Tabs : alt + w Terminal : ctrl + alt + 0  選取  ctrl + E 最近使用的檔案列表 选中下一个相同内容的快捷键(vs code中的Ctrl+D)：Alt + J 選中匹配的大括號ctrl+] 或 ctrl+[ 快速移動到警告處(黃標或紅標)  以「行」為單位  複製 : ctrl + D 移動 : ctrl + shift + ↑/↓ 註解 : ctrl + / 刪除 : ctrl+x(其實是剪下)  以「區塊」為單位  擴增選取 : ctrl + W 遞減選取 : ctrl + shift + W 更改大小寫 : ctrl + shift + U  自動功能 :  自動補全 : alt + enter 自動產生 : alt + Ins 自動排版 : ctrl + alt + L  其他  顯示形參列表:ctrl+p shift + shift 全域搜索 查找當前文件結構(有哪些方法、屬性):ctrl+F12 ctrl+alt+shift+n 找方法 Ctrl+H查看當前接口或抽象的子類 全部折疊ctrl + shift + -減號  個人設定 快捷鍵 新專案設定  新專案設定，有時候覺得奇怪不是設定過怎又跑掉，原因是在這   比較重要的是這個properties編碼跟save Actions插件的自動格式化、導包等等設定  其他舒適設定  限制開啟視窗數量:File-&amp;gt;Settings-&amp;gt;Editor-&amp;gt;General-&amp;gt;Editor Tab-&amp;gt;Tab limit   過濾顯示檔案  *.</description>
    </item>
    
  </channel>
</rss>
